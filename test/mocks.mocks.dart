// Mocks generated by Mockito 5.4.4 from annotations
// in flauncher/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:typed_data' as _i9;
import 'dart:ui' as _i11;

import 'package:drift/drift.dart' as _i4;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i6;
import 'package:flauncher/database.dart' as _i5;
import 'package:flauncher/flauncher_channel.dart' as _i8;
import 'package:flauncher/gradients.dart' as _i2;
import 'package:flauncher/providers/apps_service.dart' as _i12;
import 'package:flauncher/providers/settings_service.dart' as _i13;
import 'package:flauncher/providers/wallpaper_service.dart' as _i10;
import 'package:image_picker/image_picker.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i14;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFLauncherGradient_0 extends _i1.SmartFake
    implements _i2.FLauncherGradient {
  _FakeFLauncherGradient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_1 extends _i1.SmartFake
    implements _i3.LostDataResponse {
  _FakeLostDataResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrationStrategy_2 extends _i1.SmartFake
    implements _i4.MigrationStrategy {
  _FakeMigrationStrategy_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppsTable_3 extends _i1.SmartFake implements _i5.$AppsTable {
  _Fake$AppsTable_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$CategoriesTable_4 extends _i1.SmartFake
    implements _i5.$CategoriesTable {
  _Fake$CategoriesTable_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppsCategoriesTable_5 extends _i1.SmartFake
    implements _i5.$AppsCategoriesTable {
  _Fake$AppsCategoriesTable_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_6 extends _i1.SmartFake
    implements _i4.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_7 extends _i1.SmartFake
    implements _i4.GeneratedDatabase {
  _FakeGeneratedDatabase_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_8 extends _i1.SmartFake
    implements _i4.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_9 extends _i1.SmartFake
    implements _i4.DatabaseConnection {
  _FakeDatabaseConnection_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_10 extends _i1.SmartFake implements _i4.QueryExecutor {
  _FakeQueryExecutor_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_11 extends _i1.SmartFake
    implements _i6.StreamQueryStore {
  _FakeStreamQueryStore_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_12 extends _i1.SmartFake
    implements _i4.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_13 extends _i1.SmartFake implements _i4.Migrator {
  _FakeMigrator_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_14<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_15<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.InsertStatement<T1, D1> {
  _FakeInsertStatement_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_16<T extends _i4.Table, D> extends _i1.SmartFake
    implements _i4.UpdateStatement<T, D> {
  _FakeUpdateStatement_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_17<T1 extends _i4.HasResultSet, D>
    extends _i1.SmartFake implements _i4.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_18<FirstT extends _i4.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i4.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_19<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_20<T> extends _i1.SmartFake implements _i4.Selectable<T> {
  _FakeSelectable_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_21 extends _i1.SmartFake
    implements _i4.GenerationContext {
  _FakeGenerationContext_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FLauncherChannel].
///
/// See the documentation for Mockito's code generation for more information.
class MockFLauncherChannel extends _i1.Mock implements _i8.FLauncherChannel {
  MockFLauncherChannel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<Map<dynamic, dynamic>>> getApplications() =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplications,
          [],
        ),
        returnValue: _i7.Future<List<Map<dynamic, dynamic>>>.value(
            <Map<dynamic, dynamic>>[]),
      ) as _i7.Future<List<Map<dynamic, dynamic>>>);

  @override
  _i7.Future<_i9.Uint8List> getApplicationBanner(String? packageName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplicationBanner,
          [packageName],
        ),
        returnValue: _i7.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i7.Future<_i9.Uint8List>);

  @override
  _i7.Future<_i9.Uint8List> getApplicationIcon(String? packageName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getApplicationIcon,
          [packageName],
        ),
        returnValue: _i7.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i7.Future<_i9.Uint8List>);

  @override
  _i7.Future<bool> applicationExists(String? packageName) =>
      (super.noSuchMethod(
        Invocation.method(
          #applicationExists,
          [packageName],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> launchApp(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #launchApp,
          [packageName],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> openSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> openAppInfo(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #openAppInfo,
          [packageName],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> uninstallApp(String? packageName) => (super.noSuchMethod(
        Invocation.method(
          #uninstallApp,
          [packageName],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> isDefaultLauncher() => (super.noSuchMethod(
        Invocation.method(
          #isDefaultLauncher,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> checkForGetContentAvailability() => (super.noSuchMethod(
        Invocation.method(
          #checkForGetContentAvailability,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<Map<String, dynamic>> getActiveNetworkInformation() =>
      (super.noSuchMethod(
        Invocation.method(
          #getActiveNetworkInformation,
          [],
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);

  @override
  _i7.Future<void> startAmbientMode() => (super.noSuchMethod(
        Invocation.method(
          #startAmbientMode,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void addAppsChangedListener(void Function(Map<String, dynamic>)? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addAppsChangedListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addNetworkChangedListener(
          void Function(Map<String, dynamic>)? listener) =>
      super.noSuchMethod(
        Invocation.method(
          #addNetworkChangedListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [WallpaperService].
///
/// See the documentation for Mockito's code generation for more information.
class MockWallpaperService extends _i1.Mock implements _i10.WallpaperService {
  MockWallpaperService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FLauncherGradient get gradient => (super.noSuchMethod(
        Invocation.getter(#gradient),
        returnValue: _FakeFLauncherGradient_0(
          this,
          Invocation.getter(#gradient),
        ),
      ) as _i2.FLauncherGradient);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> pickWallpaper() => (super.noSuchMethod(
        Invocation.method(
          #pickWallpaper,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setGradient(_i2.FLauncherGradient? fLauncherGradient) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGradient,
          [fLauncherGradient],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppsService extends _i1.Mock implements _i12.AppsService {
  MockAppsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  List<_i5.App> get applications => (super.noSuchMethod(
        Invocation.getter(#applications),
        returnValue: <_i5.App>[],
      ) as List<_i5.App>);

  @override
  List<_i5.CategoryWithApps> get categoriesWithApps => (super.noSuchMethod(
        Invocation.getter(#categoriesWithApps),
        returnValue: <_i5.CategoryWithApps>[],
      ) as List<_i5.CategoryWithApps>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<_i9.Uint8List> getAppBanner(String? packageName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppBanner,
          [packageName],
        ),
        returnValue: _i7.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i7.Future<_i9.Uint8List>);

  @override
  _i7.Future<_i9.Uint8List> getAppIcon(String? packageName) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAppIcon,
          [packageName],
        ),
        returnValue: _i7.Future<_i9.Uint8List>.value(_i9.Uint8List(0)),
      ) as _i7.Future<_i9.Uint8List>);

  @override
  _i7.Future<void> launchApp(_i5.App? app) => (super.noSuchMethod(
        Invocation.method(
          #launchApp,
          [app],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> openAppInfo(_i5.App? app) => (super.noSuchMethod(
        Invocation.method(
          #openAppInfo,
          [app],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> uninstallApp(_i5.App? app) => (super.noSuchMethod(
        Invocation.method(
          #uninstallApp,
          [app],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> openSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSettings,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> isDefaultLauncher() => (super.noSuchMethod(
        Invocation.method(
          #isDefaultLauncher,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> startAmbientMode() => (super.noSuchMethod(
        Invocation.method(
          #startAmbientMode,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> addToCategory(
    _i5.App? app,
    _i5.Category? category, {
    bool? shouldNotifyListeners = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addToCategory,
          [
            app,
            category,
          ],
          {#shouldNotifyListeners: shouldNotifyListeners},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> removeFromCategory(
    _i5.App? app,
    _i5.Category? category,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFromCategory,
          [
            app,
            category,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> saveOrderInCategory(_i5.Category? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveOrderInCategory,
          [category],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void reorderApplication(
    _i5.Category? category,
    int? oldIndex,
    int? newIndex,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #reorderApplication,
          [
            category,
            oldIndex,
            newIndex,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> addCategory(
    String? categoryName, {
    bool? shouldNotifyListeners = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCategory,
          [categoryName],
          {#shouldNotifyListeners: shouldNotifyListeners},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> renameCategory(
    _i5.Category? category,
    String? categoryName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #renameCategory,
          [
            category,
            categoryName,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteCategory(_i5.Category? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [category],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> moveCategory(
    int? oldIndex,
    int? newIndex,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCategory,
          [
            oldIndex,
            newIndex,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> hideApplication(_i5.App? application) => (super.noSuchMethod(
        Invocation.method(
          #hideApplication,
          [application],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> unHideApplication(_i5.App? application) =>
      (super.noSuchMethod(
        Invocation.method(
          #unHideApplication,
          [application],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCategoryType(
    _i5.Category? category,
    _i5.CategoryType? type, {
    bool? shouldNotifyListeners = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategoryType,
          [
            category,
            type,
          ],
          {#shouldNotifyListeners: shouldNotifyListeners},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCategorySort(
    _i5.Category? category,
    _i5.CategorySort? sort,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategorySort,
          [
            category,
            sort,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCategoryColumnsCount(
    _i5.Category? category,
    int? columnsCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategoryColumnsCount,
          [
            category,
            columnsCount,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setCategoryRowHeight(
    _i5.Category? category,
    int? rowHeight,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setCategoryRowHeight,
          [
            category,
            rowHeight,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SettingsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSettingsService extends _i1.Mock implements _i13.SettingsService {
  MockSettingsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get appHighlightAnimationEnabled => (super.noSuchMethod(
        Invocation.getter(#appHighlightAnimationEnabled),
        returnValue: false,
      ) as bool);

  @override
  String get backButtonAction => (super.noSuchMethod(
        Invocation.getter(#backButtonAction),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#backButtonAction),
        ),
      ) as String);

  @override
  String get dateFormat => (super.noSuchMethod(
        Invocation.getter(#dateFormat),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#dateFormat),
        ),
      ) as String);

  @override
  String get timeFormat => (super.noSuchMethod(
        Invocation.getter(#timeFormat),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.getter(#timeFormat),
        ),
      ) as String);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<void> setAppHighlightAnimationEnabled(bool? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAppHighlightAnimationEnabled,
          [value],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setGradientUuid(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setGradientUuid,
          [value],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setBackButtonAction(String? value) => (super.noSuchMethod(
        Invocation.method(
          #setBackButtonAction,
          [value],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setDateTimeFormat(
    String? dateFormatString,
    String? timeFormatString,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDateTimeFormat,
          [
            dateFormatString,
            timeFormatString,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i1.Mock implements _i3.ImagePicker {
  MockImagePicker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i3.XFile?> pickImage({
    required _i3.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i3.CameraDevice? preferredCameraDevice = _i3.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<_i3.XFile?>.value(),
      ) as _i7.Future<_i3.XFile?>);

  @override
  _i7.Future<List<_i3.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<List<_i3.XFile>>.value(<_i3.XFile>[]),
      ) as _i7.Future<List<_i3.XFile>>);

  @override
  _i7.Future<_i3.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<_i3.XFile?>.value(),
      ) as _i7.Future<_i3.XFile?>);

  @override
  _i7.Future<List<_i3.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<List<_i3.XFile>>.value(<_i3.XFile>[]),
      ) as _i7.Future<List<_i3.XFile>>);

  @override
  _i7.Future<_i3.XFile?> pickVideo({
    required _i3.ImageSource? source,
    _i3.CameraDevice? preferredCameraDevice = _i3.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i7.Future<_i3.XFile?>.value(),
      ) as _i7.Future<_i3.XFile?>);

  @override
  _i7.Future<_i3.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i7.Future<_i3.LostDataResponse>.value(_FakeLostDataResponse_1(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i7.Future<_i3.LostDataResponse>);

  @override
  bool supportsImageSource(_i3.ImageSource? source) => (super.noSuchMethod(
        Invocation.method(
          #supportsImageSource,
          [source],
        ),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [FLauncherDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockFLauncherDatabase extends _i1.Mock implements _i5.FLauncherDatabase {
  MockFLauncherDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get wasCreated => (super.noSuchMethod(
        Invocation.getter(#wasCreated),
        returnValue: false,
      ) as bool);

  @override
  set wasCreated(bool? _wasCreated) => super.noSuchMethod(
        Invocation.setter(
          #wasCreated,
          _wasCreated,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);

  @override
  _i4.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_2(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i4.MigrationStrategy);

  @override
  _i5.$AppsTable get apps => (super.noSuchMethod(
        Invocation.getter(#apps),
        returnValue: _Fake$AppsTable_3(
          this,
          Invocation.getter(#apps),
        ),
      ) as _i5.$AppsTable);

  @override
  _i5.$CategoriesTable get categories => (super.noSuchMethod(
        Invocation.getter(#categories),
        returnValue: _Fake$CategoriesTable_4(
          this,
          Invocation.getter(#categories),
        ),
      ) as _i5.$CategoriesTable);

  @override
  _i5.$AppsCategoriesTable get appsCategories => (super.noSuchMethod(
        Invocation.getter(#appsCategories),
        returnValue: _Fake$AppsCategoriesTable_5(
          this,
          Invocation.getter(#appsCategories),
        ),
      ) as _i5.$AppsCategoriesTable);

  @override
  Iterable<_i4.TableInfo<_i4.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i4.TableInfo<_i4.Table, Object?>>[],
      ) as Iterable<_i4.TableInfo<_i4.Table, Object?>>);

  @override
  List<_i4.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i4.DatabaseSchemaEntity>[],
      ) as List<_i4.DatabaseSchemaEntity>);

  @override
  _i4.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_6(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i4.StreamQueryUpdateRules);

  @override
  _i4.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_7(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i4.GeneratedDatabase);

  @override
  _i4.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_8(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.DriftDatabaseOptions);

  @override
  _i4.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_9(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i4.DatabaseConnection);

  @override
  _i4.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i14.dummyValue<_i4.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i4.SqlTypes);

  @override
  _i4.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_10(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i4.QueryExecutor);

  @override
  _i6.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_11(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i6.StreamQueryStore);

  @override
  _i4.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_12(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i4.DatabaseConnectionUser);

  @override
  _i7.Future<List<_i5.App>> listApplications() => (super.noSuchMethod(
        Invocation.method(
          #listApplications,
          [],
        ),
        returnValue: _i7.Future<List<_i5.App>>.value(<_i5.App>[]),
      ) as _i7.Future<List<_i5.App>>);

  @override
  _i7.Future<void> persistApps(List<_i5.AppsCompanion>? applications) =>
      (super.noSuchMethod(
        Invocation.method(
          #persistApps,
          [applications],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateApp(
    String? packageName,
    _i5.AppsCompanion? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateApp,
          [
            packageName,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteApps(List<String>? packageNames) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteApps,
          [packageNames],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> insertCategory(_i5.CategoriesCompanion? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertCategory,
          [category],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteCategory(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCategory,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateCategories(List<_i5.CategoriesCompanion>? values) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategories,
          [values],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateCategory(
    int? id,
    _i5.CategoriesCompanion? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCategory,
          [
            id,
            value,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteAppCategory(
    int? categoryId,
    String? packageName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAppCategory,
          [
            categoryId,
            packageName,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> insertAppsCategories(
          List<_i5.AppsCategoriesCompanion>? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAppsCategories,
          [value],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> replaceAppsCategories(
          List<_i5.AppsCategoriesCompanion>? value) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceAppsCategories,
          [value],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i5.CategoryWithApps>> listCategoriesWithVisibleApps() =>
      (super.noSuchMethod(
        Invocation.method(
          #listCategoriesWithVisibleApps,
          [],
        ),
        returnValue: _i7.Future<List<_i5.CategoryWithApps>>.value(
            <_i5.CategoryWithApps>[]),
      ) as _i7.Future<List<_i5.CategoryWithApps>>);

  @override
  _i7.Future<int?> nextAppCategoryOrder(int? categoryId) => (super.noSuchMethod(
        Invocation.method(
          #nextAppCategoryOrder,
          [categoryId],
        ),
        returnValue: _i7.Future<int?>.value(),
      ) as _i7.Future<int?>);

  @override
  _i4.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_13(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i4.Migrator);

  @override
  _i7.Future<void> beforeOpen(
    _i4.QueryExecutor? executor,
    _i4.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<Map<String, Object?>>> createStream(
          _i6.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i7.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i7.Stream<List<Map<String, Object?>>>);

  @override
  T alias<T, D>(
    _i4.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i14.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i4.TableInfo<_i4.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i4.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<Set<_i4.TableUpdate>> tableUpdates(
          [_i4.TableUpdateQuery? query = const _i4.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i7.Stream<Set<_i4.TableUpdate>>.empty(),
      ) as _i7.Stream<Set<_i4.TableUpdate>>);

  @override
  _i7.Future<T> doWhenOpened<T>(
          _i7.FutureOr<T> Function(_i4.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i4.InsertStatement<T, D> into<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_15<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i4.InsertStatement<T, D>);

  @override
  _i4.UpdateStatement<Tbl, R> update<Tbl extends _i4.Table, R>(
          _i4.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_16<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i4.UpdateStatement<Tbl, R>);

  @override
  _i4.SimpleSelectStatement<T, R> select<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_17<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.SimpleSelectStatement<T, R>);

  @override
  _i4.JoinedSelectStatement<T, R> selectOnly<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_18<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.JoinedSelectStatement<T, R>);

  @override
  _i4.DeleteStatement<T, D> delete<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_19<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i4.DeleteStatement<T, D>);

  @override
  _i7.Future<int> customUpdate(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> customInsert(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<List<_i4.QueryRow>> customWriteReturning(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i7.Future<List<_i4.QueryRow>>.value(<_i4.QueryRow>[]),
      ) as _i7.Future<List<_i4.QueryRow>>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelect(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_20<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelectQuery(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_20<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i7.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<T> transaction<T>(
    _i7.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i14.ifNotNull(
              _i14.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_14<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i7.Future<void> batch(_i7.FutureOr<void> Function(_i4.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i4.GenerationContext $write(
    _i4.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_21(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  _i4.GenerationContext $writeInsertable(
    _i4.TableInfo<_i4.Table, dynamic>? table,
    _i4.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_21(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i14.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);
}
